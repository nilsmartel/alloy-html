-- vim: set syntax=haskell :

Node :=
    kind: <ident>
    ids_classes: (<id>|<class>)*
    attr: <attributes>?
    body: <body>


Element := Node | <string>

string := ".." | '..' | $<inline-str>

<body> :=
    |   "{" Element* "}"
    |   <string>
    |   Node
    |   ";" -- nothing

attributes :=
    "("
    <attr> ** ","
    ")"

attr :=
    key: <ident>
    value: ":" <inline-str-value>?

-- basically everything but , and )
-- this gets trimmed.
inline-str-value :=
    | (" " | ":" | ";" | ".") ++ <inline-str-value>
    | <string> ++ <inline-str-value>
    -- this way we can take opening parens, but stop on closing ones.
    | AnyParen(<inline-str-value>) ++ <inline-str-value>
    | <ident> ++ <inline-str-value>
    | <null>

<ident> := a-z|A-Z|0-9|-|_|$|%|Â°

<id> := '#' <ident>

<class> := '.' <ident>


-- unused:
AnyParen T :=
      "(" T ")"
    | "{" T "}"
    | "[" T "]"

